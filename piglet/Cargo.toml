[package]
name = "piglet"
version = "0.6.0"
edition = "2021"
description = "A CLI agent for interacting with local Raspberry Pi GPIO Hardware from piggui GUI"
authors = ["Andrew Mackenzie <andrew@mackenzie-serres.net>", "Sundaram Krishnan <krishnsundaram@gmail.com>"]
license = "Apache-2.0"
documentation = "https://github.com/andrewdavidmackenzie/pigg/README.md"
repository = "https://github.com/andrewdavidmackenzie/pigg/"
homepage = "https://github.com/andrewdavidmackenzie/pigg/"
readme = "../README.md"
exclude = [".cargo", ".git", ".github", ".idea", ".gitignore", "Makefile"]
rust-version = "1.80"

[workspace]
exclude = [".."]

[package.metadata.wix]
upgrade-guid = "7DCB054F-6CE0-4914-876E-AEA0C2E91328"
path-guid = "17155407-8DA8-45BD-8C67-91FE4C7E99AA"
license = false
eula = false

[[bin]]
name = "piglet"
path = "src/piglet.rs"

[features]
default = ["iroh", "tcp", "discovery"]
tcp = ["portpicker", "local-ip-address"]
discovery = ["mdns-sd"]
no_std = []
usb = []

[dependencies]
pigdef = { version = "0.6", path = "../pigdef" }
pigpio = { version = "0.6", path = "../pigpio" }

# Optional Dependencies
iroh = { version = "0.32", default-features = false, optional = true }
portpicker = { version = "0.1.1", default-features = false, optional = true }
local-ip-address = { version = "0.6.3", default-features = false, optional = true }
mdns-sd = { version = "0.13.2", default-features = false, optional = true }

chrono = { version = "0.4", default-features = false, features = ["now", "serde"] }
serde = { version = "1.0.217", default-features = false, features = ["derive"] }
async-std = "1.13"

# for config serialization to/from file
serde_json = { version = "1.0.138", default-features = false, features = ["std"] }
# for alloc/no_alloc over the wire serialization/deserialization
postcard = { version = "1.1.1", features = ["alloc"] }

rand = { version = "0.8.5", default-features = false, features = ["std", "std_rng"] }
env_logger = { version = "0.11.6", default-features = false }
anyhow = { version = "1", default-features = false, features = ["std"] }
futures = { version = "0.3.31", default-features = false }
tokio = { version = "1.43", default-features = false, features = ["time", "rt", "macros"] }

log = { version = "0.4.25", default-features = false }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tempfile = "3"
serial_test = "3.1.1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
sysinfo = { version = "0.33.1", default-features = false, features = ["system"] }
service-manager = { version = "0.7.1", default-features = false }
clap = { version = "4.5.28", default-features = false, features = ["std", "help", "error-context"] }

# Raspberry Pi specific dependencies
[target.'cfg(any(all(target_arch = "aarch64", target_os = "linux"), target_arch = "arm"))'.dependencies]
rppal = "0.22.1"
libc = "0.2.169"

[profile.release]
opt-level = "s"
lto = "fat"
panic = "abort"
strip = "debuginfo"
codegen-units = 1

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"

[package.metadata.cargo-all-features]
skip_optional_dependencies = true
denylist = ["no_std"]

[package.metadata.docs.rs]
features = ["iroh", "tcp"]
rustdoc-args = ["--cfg", "docsrs"]
