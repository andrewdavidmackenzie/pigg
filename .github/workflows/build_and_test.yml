
name: Build and Test with Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule: # Build every day at 5PM UTC
    - cron: '0 17 * * *'

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -C instrument-coverage
  LLVM_PROFILE_FILE: pigg-%p-%m.profraw

jobs: 

  clippy-build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-14, ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy,llvm-tools-preview
          toolchain: stable

      - name: InstallCoverageTools
        if: runner.os == 'macOS'
        run: |
          cargo install grcov

      # lcov on ubuntu-latest (22.04) is still version 1.14 that doesn't have the "--erase-functions" option we want
      - name: Setup LCOV
        if: runner.os == 'macOS'
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: make
        run: |
          make clippy build test

      - name: clean up coverage
        if: runner.os == 'macOS'
        run: |
          grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
          lcov --remove lcov.info -o lcov.info --erase-functions "(?=^.*fmt).+"

      - name: UploadCoverage
        if: runner.os == 'macOS'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          file: lcov.info
          flags: unittests
          name: codecov-umbrella
          verbose: true
  
  cross-build-and-test-for-aarch64-unknown-linux-gnu:
    name: cross-build-and-test-for-aarch64-unknown-linux-gnu
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Add aarch64 Target with Rustup
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Install Cross Tool
        run: cargo install cross

      - name: Cross Build for aarch64-unknown-linux-gnu
        run: make cross-build

  cross-build-and-test-for-armv7-unknown-linux-gnueabihf:
    name: cross-build-and-test-for-armv7-unknown-linux-gnueabihf
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
   

      - name: Add armv7 linker
        run: |
            sudo apt install gcc-arm-linux-gnueabihf

      - name: Add armv7 Target with Rustup
        run: rustup target add armv7-unknown-linux-gnueabihf
      
      - name: Install Cross Tool
        run: cargo install cross

      - name: Cross Build for armv7-unknown-linux-gnueabihf
        run: make cross-build-armv7

