name: Arm Builds

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1
  GH_TOKEN: ${{ github.token }}

jobs:
  arm-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Add target
        run: rustup target add arm-unknown-linux-gnueabihf

      - name: Install armv (armv6) Linker
        run: |
          sudo apt update
          sudo apt install -y gcc-arm-linux-gnueabihf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build for armv (armv6)
        run: cargo build --target=arm-unknown-linux-gnueabihf

  arm7-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Add target
        run: rustup target add armv7-unknown-linux-gnueabihf

      - name: Install armv7 Linker
        run: |
          sudo apt update
          sudo apt install -y gcc-arm-linux-gnueabihf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build for armv7
        run: cargo build --target=armv7-unknown-linux-gnueabihf

  arm7-musl-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Add target
        run: rustup target add armv7-unknown-linux-musleabihf

      - name: Install armv7 Linker
        run: |
          sudo apt update
          sudo apt install -y gcc-arm-linux-gnueabihf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build for armv7-musl
        run: RUSTFLAGS= cargo build --target=armv7-unknown-linux-musleabihf

  aarch64-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Add target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Install aarch64 Linker
        run: |
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build for aarch64
        run: cargo build --target=aarch64-unknown-linux-gnu

  aarch64-android-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: true

      - name: debug
        run: ls $ANDROID_NDK_HOME/toolchains/llvm/prebuilt

      - name: Add android clang to PATH
        run: echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Add target
        run: rustup target add aarch64-linux-android

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build for aarch64
        run: cargo build --bin pigglet --target=aarch64-linux-android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}