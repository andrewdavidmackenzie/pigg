[package]
name = "pigg"
version = "0.3.4"
edition = "2021"
description = "A Graphical User Interface for interacting with local and remote Raspberry Pi Hardware"
default-run = "piggui"
authors = ["Andrew Mackenzie <andrew@mackenzie-serres.net>", "Sundaram Krishnan <krishnsundaram@gmail.com>"]
license = "Apache-2.0"
documentation = "https://github.com/andrewdavidmackenzie/pigg/README.md"
repository = "https://github.com/andrewdavidmackenzie/pigg/"
readme = "README.md"
exclude = [".github", "assets/", "codecov.yml", "configs/", "Makefile", ".cargo_vcs_info.json",
    ".gitignore", "tests"]

[package.metadata.wix]
upgrade-guid = "7DCB054F-6CE0-4914-876E-AEA0C2E91328"
path-guid = "17155407-8DA8-45BD-8C67-91FE4C7E99AA"
license = false
eula = false

[[bin]]
name = "piggui"
path = "src/piggui.rs"

[[bin]]
name = "piglet"
path = "src/piglet.rs"

[features]
default = ["iroh", "tcp"]
iroh = ["iroh-net", "derive_more"]
tcp = ["portpicker", "local-ip-address"]
discovery = []

[dependencies]
# Optional Dependencies
derive_more = { version = "=1.0.0-beta.6", optional = true } # To fix iroh-net issue
iroh-net = { version = "0.19.0", default-features = false, optional = true }
portpicker = { version = "0.1.1", default-features = false, optional = true }
local-ip-address = { version = "0.6.1", default-features = false, optional = true }

# use in piggui and piglet
chrono = { version = "0.4", default-features = false, features = ["now", "serde"] }
serde = { version = "1.0.208", default-features = false, features = ["derive"] }
serde_json = { version = "1.0.125", default-features = false, features = ["std"] }
serde_arrays = { version = "0.1.0", default-features = false }
rand = { version = "0.8.5", default-features = false, features = ["std", "std_rng"] }
tracing-subscriber = { version = "0.3.18", default-features = false, features = ["fmt", "env-filter"] }
anyhow = { version = "1", default-features = false, features = ["std"] }
futures = { version = "0.3.30", default-features = false }
tokio = { version = "1.39.3", default-features = false, features = ["time", "rt", "macros"] }

# used in piglet only
log = { version = "0.4.22", default-features = false }

# used by piggui in GUI only
iced = { version = "0.12.1", default-features = false, features = ["tokio"] }
iced_aw = { version = "0.9.3", default-features = false, features = ["menu"] }
iced_futures = { version = "0.12.0", default-features = false }
plotters-iced = { version = "0.10", default-features = false }
plotters = { version = "0.3", default_features = false, features = [
    "chrono",
    "line_series",
] }
tracing = { version = "0.1.40", default-features = false }
once_cell = { version = "1.19.0", default-features = false }
lyon_algorithms = { version = "1.0", default-features = false }
async-std = "1.12.0"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tempfile = "3"
serial_test = "3.1.1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
sysinfo = { version = "0.31.2", default-features = false, features = ["system"] }
service-manager = { version = "0.7.1", default-features = false }
rfd = "0.14.1"
clap = { version = "4.5.16", default-features = false, features = ["std", "help", "error-context"] }

[target.aarch64-unknown-linux-gnu.dependencies]
rppal = "0.19.0"

[target.armv7-unknown-linux-gnueabihf.dependencies]
rppal = "0.19.0"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.19.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "homebrew", "msi"]
# A GitHub repo to push Homebrew formulas to
tap = "andrewdavidmackenzie/pigg-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc",
    "aarch64-unknown-linux-gnu", "armv7-unknown-linux-gnueabihf"]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false

[workspace.metadata.dist.github-custom-runners]
aarch64-apple-darwin = "macos-14"
x86_64-apple-darwin = "macos-12"
x86_64-unknown-linux-gnu = "ubuntu-latest"
x86_64-pc-windows-msvc = "windows-latest"

[package.metadata.cargo-all-features]
skip_optional_dependencies = true
